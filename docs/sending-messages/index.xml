<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sending messages on Lettre site</title>
    <link>http://docs.lettre.at/sending-messages/</link>
    <description>Recent content in Sending messages on Lettre site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 May 2017 23:46:01 +0200</lastBuildDate>
    
	<atom:link href="http://docs.lettre.at/sending-messages/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>http://docs.lettre.at/sending-messages/intro/</link>
      <pubDate>Sun, 21 May 2017 23:46:17 +0200</pubDate>
      
      <guid>http://docs.lettre.at/sending-messages/intro/</guid>
      <description>This mailer contains several different transports for your emails. To be sendable, the emails have to implement SendableEmail, which is the case for emails created with lettre_email.
The following transports are available:
 The SmtpTransport uses the SMTP protocol to send the message over the network. It is the preferred way of sending emails. The SendmailTransport uses the sendmail command to send messages. It is an alternative to the SMTP transport.</description>
    </item>
    
    <item>
      <title>SMTP transport</title>
      <link>http://docs.lettre.at/sending-messages/smtp/</link>
      <pubDate>Sun, 21 May 2017 23:46:17 +0200</pubDate>
      
      <guid>http://docs.lettre.at/sending-messages/smtp/</guid>
      <description>This transport uses the SMTP protocol to send emails over the network (locally or remotely).
It is designed to be:
 Secured: email are encrypted by default Modern: Unicode support for email content and sender/recipient addresses when compatible Fast: supports tcp connection reuse  This client is designed to send emails to a relay server, and should not be used to send emails directly to the destination.
The relay server can be the local email server, a specific host or a third-party service.</description>
    </item>
    
    <item>
      <title>Sendmail transport</title>
      <link>http://docs.lettre.at/sending-messages/sendmail/</link>
      <pubDate>Sun, 21 May 2017 23:46:17 +0200</pubDate>
      
      <guid>http://docs.lettre.at/sending-messages/sendmail/</guid>
      <description>The sendmail transport sends the email using the local sendmail command.
extern crate lettre; use lettre::sendmail::SendmailTransport; use lettre::{SimpleSendableEmail, EmailTransport}; fn main() { let email = SimpleSendableEmail::new( &amp;#34;user@localhost&amp;#34;.to_string(), &amp;amp;[&amp;#34;root@localhost&amp;#34;.to_string()], &amp;#34;message_id&amp;#34;.to_string(), &amp;#34;Hello world&amp;#34;.to_string(), ).unwrap(); let mut sender = SendmailTransport::new(); let result = sender.send(&amp;amp;email); assert!(result.is_ok()); }</description>
    </item>
    
    <item>
      <title>File transport</title>
      <link>http://docs.lettre.at/sending-messages/file/</link>
      <pubDate>Sun, 21 May 2017 23:46:17 +0200</pubDate>
      
      <guid>http://docs.lettre.at/sending-messages/file/</guid>
      <description>The file transport writes the emails to the given directory. The name of the file will be message_id.txt. It can be useful for testing purposes, or if you want to keep track of sent messages.
extern crate lettre; use std::env::temp_dir; use lettre::file::FileEmailTransport; use lettre::{SimpleSendableEmail, EmailTransport}; fn main() { // Write to the local temp directory  let mut sender = FileEmailTransport::new(temp_dir()); let email = SimpleSendableEmail::new( &amp;#34;user@localhost&amp;#34;.to_string(), &amp;amp;[&amp;#34;root@localhost&amp;#34;.to_string()], &amp;#34;message_id&amp;#34;.to_string(), &amp;#34;Hello world&amp;#34;.to_string(), ).</description>
    </item>
    
    <item>
      <title>Stub transport</title>
      <link>http://docs.lettre.at/sending-messages/stub/</link>
      <pubDate>Sun, 21 May 2017 23:46:17 +0200</pubDate>
      
      <guid>http://docs.lettre.at/sending-messages/stub/</guid>
      <description>The stub transport only logs message envelope and drops the content. It can be useful for testing purposes.
extern crate lettre; use lettre::stub::StubEmailTransport; use lettre::{SimpleSendableEmail, EmailTransport}; fn main() { let email = SimpleSendableEmail::new( &amp;#34;user@localhost&amp;#34;.to_string(), &amp;amp;[&amp;#34;root@localhost&amp;#34;.to_string()], &amp;#34;message_id&amp;#34;.to_string(), &amp;#34;Hello world&amp;#34;.to_string(), ).unwrap(); let mut sender = StubEmailTransport::new_positive(); let result = sender.send(&amp;amp;email); assert!(result.is_ok()); } Will log (when using a logger like env_logger):
b7c211bc-9811-45ce-8cd9-68eab575d695: from=&amp;lt;user@localhost&amp;gt; to=&amp;lt;root@localhost&amp;gt;</description>
    </item>
    
  </channel>
</rss>